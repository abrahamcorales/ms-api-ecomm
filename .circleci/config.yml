version: '2.1'
parameters:
  image-tag:
    type: string
    default: $(echo $CIRCLE_SHA1 | cut -c -7)

orbs:
  aws-ecr: circleci/aws-ecr@6.15
  aws-ecs: circleci/aws-ecs@2.2.1
  aws-cli: circleci/aws-cli@1.3

workflows:
  build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: $CIRCLE_PROJECT_REPONAME
          region: AWS_DEFAULT_REGION
          skip-when-tags-exist: false
          create-repo: true
          tag: <<pipeline.parameters.image-tag>>
          dockerfile: Dockerfile
          context:
            - prod
          filters:
            branches:
              only: 
              - main
      - update-task:
          context:
            - prod
          filters:
            branches:
              only: 
              - main
          requires:
            - aws-ecr/build-and-push-image   
      - aws-ecs/deploy-service-update:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          cluster-name: CLUSTER_ECS
          container-image-name-updates: 'container=${CIRCLE_PROJECT_REPONAME},tag=<<pipeline.parameters.image-tag>>'
          family: '${CIRCLE_PROJECT_REPONAME}'
          service-name: '$CIRCLE_PROJECT_REPONAME'
          requires:
            - update-task
          context:
            - prod
          filters:
            branches:
              only: 
              - main

jobs:
  update-task:
    docker:
      - image: 'cimg/python:3.9.1'
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_DEFAULT_REGION
      - aws-ecs/update-task-definition-from-json:
          task-definition-json: '.circleci/task-definition/${CIRCLE_PROJECT_REPONAME}.json'